name: Local LLM PR Summary

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ggml-org/llama.cpp:full

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          apt-get update && apt-get install -y cmake build-essential git libcurl4-openssl-dev

      - name: Clone llama.cpp
        run: |
          git clone https://github.com/ggml-org/llama.cpp.git /llama.cpp

      - name: Build llama.cpp
        run: |
          cd /llama.cpp
          cmake -B build -DLLAMA_BUILD_EXAMPLES=ON
          cmake --build build --config Release -j$(nproc)

      - name: Download model (Mistral 7B)
        run: |
          mkdir -p /models/
          curl -L https://huggingface.co/TheBloke/Mistral-7B-Instruct-v0.1-GGUF/resolve/main/mistral-7b-instruct-v0.1.Q4_K_M.gguf \
            -o /models/mistral.gguf

      - name: Locate `llama-cli` binary
        id: locate-cli
        run: |
          CLI_PATH=$(find /llama.cpp/build -type f -name llama-cli -executable | head -n 1)
          echo "Found llama-cli binary at: $CLI_PATH"
          if [ -z "$CLI_PATH" ]; then
            echo "❌ llama-cli binary not found"
            exit 1
          fi
          echo "main-path=$CLI_PATH" >> $GITHUB_OUTPUT

      - name: Generate diff summary
        id: llm-summary
        run: |
          cd "$GITHUB_WORKSPACE"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}

          # Get clean diff with relevant context
          RAW_DIFF=$(git diff -U5 "$BASE_SHA" "$HEAD_SHA" | head -c 6000)
          CLEAN_DIFF=$(echo "$RAW_DIFF" | grep -vE '^diff --git|^index |^--- |^\+\+\+ |^@@ ' | grep -vE '^[-+]$' | grep -vE '^[-+]\s*$')

          PROMPT="[INST] <<SYS>>
          You are a senior software engineer reviewing GitHub pull requests. Analyze these changes:

          1. Identify the PR's main objective
          2. List 3-5 specific technical changes
          3. Note any potential impacts
          <</SYS>>

          Format requirements:
          - No instructions repetition
          - No markdown formatting
          - Only factual observations
          - Maximum 5 bullet points

          Here are the changes:
          $CLEAN_DIFF[/INST]"

              MAIN_BIN="${{ steps.locate-cli.outputs.main-path }}"
              
              # Get raw LLM response
              RAW_OUTPUT=$("$MAIN_BIN" \
                -m /models/mistral.gguf \
                -t 4 \
                --temp 0.4 \
                --ctx-size 2048 \
                --n-predict 256 \
                --repeat-penalty 1.1 \
                --prompt "$PROMPT")

              # Clean the output
              CLEAN_OUTPUT=$(echo "$RAW_OUTPUT" | \
                grep -vE '\[INST\]|<<SYS>>|You are a|Format requirements|Here are the changes' | \
                head -n 5 | \
                sed '/^$/d')

              {
                echo "SUMMARY<<EOF"
                echo "### 🤖 Technical PR Analysis"
                echo "$CLEAN_OUTPUT"
                echo "EOF"
              } >> $GITHUB_OUTPUT

      - name: Post summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### 🤖 Technical PR Analysis
            ${{ steps.llm-summary.outputs.SUMMARY }}

            _Summary generated from code changes at $(date -u)_
          edit-mode: replace
