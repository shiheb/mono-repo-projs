name: AI PR Summary with Mistral
on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  generate-summary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare diff
        id: prepare-diff
        run: |
          # Get clean diff with context
          RAW_DIFF=$(git diff -U3 ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})

          # Remove metadata lines and limit size
          CLEAN_DIFF=$(echo "$RAW_DIFF" \
            | grep -v -E '^(diff --git|index|+++|---|@@)' \
            | head -c 6000 \
            | sed 's/"/\\"/g')

          # Store as environment variable
          echo "DIFF_CONTENT=$CLEAN_DIFF" >> $GITHUB_ENV

          # Debug output
          echo "Diff prepared (${#CLEAN_DIFF} chars)"
          echo "Sample: ${CLEAN_DIFF:0:100}"

      - name: Generate summary
        id: generate-summary
        env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          # Create the analysis prompt
          read -r -d '' PROMPT << EOM
          Analyze these code changes for a GitHub pull request and provide:
          1. **Purpose**: One sentence describing the main goal
          2. **Changes**: 3-5 specific technical modifications
          3. **Impact**: Potential effects on the system

          Diff:
          $DIFF_CONTENT
          EOM

          # Build the API request
          REQUEST_JSON=$(jq -n \
            --arg prompt "$PROMPT" \
            '{
              model: "mistral-medium-latest",
              messages: [
                {
                  role: "system",
                  content: "You are a senior engineer analyzing GitHub PRs. Respond with clean markdown using only the requested sections."
                },
                {
                  role: "user",
                  content: $prompt
                }
              ],
              temperature: 0.2,
              max_tokens: 600
            }')

          # Call Mistral API
          echo "Calling Mistral API..."
          RESPONSE=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $MISTRAL_API_KEY" \
            -d "$REQUEST_JSON" \
            https://api.mistral.ai/v1/chat/completions)

          # Process response
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

          # Set output
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "### ðŸ¤– AI-Powered PR Analysis" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post summary
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.generate-summary.outputs.summary }}

            _Generated at $(date -u +'%Y-%m-%d %H:%M UTC') using Mistral AI_
          edit-mode: replace
