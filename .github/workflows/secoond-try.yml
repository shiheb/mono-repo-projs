name: AI PR Summary with Mistral

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  summarize-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get and analyze diff
        id: diff-analysis
        run: |
          # Get clean diff with context
          RAW_DIFF=$(git diff -U3 --ignore-all-space --ignore-blank-lines \
            "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}")

          # Calculate diff metrics
          DIFF_LENGTH=${#RAW_DIFF}
          CHANGED_FILES=$(git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}" | wc -l)

          # Skip if diff is too small or contains only whitespace changes
          if [[ $DIFF_LENGTH -lt 100 || $CHANGED_FILES -eq 0 ]]; then
            echo "skip_summary=true" >> $GITHUB_OUTPUT
            echo "summary_status=No significant changes detected" >> $GITHUB_OUTPUT
          else
            echo "skip_summary=false" >> $GITHUB_OUTPUT
            echo "$RAW_DIFF" | head -c 8000 > pr.diff
            echo "summary_status=Diff ready for analysis ($DIFF_LENGTH chars, $CHANGED_FILES files)" >> $GITHUB_OUTPUT
          fi

      - name: Generate AI summary
        if: steps.diff-analysis.outputs.skip_summary == 'false'
        id: ai-summary
        env:
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
        run: |
          # Prepare the diff content
          DIFF_CONTENT=$(cat pr.diff | sed 's/"/\\"/g' | tr '\n' ' ')

          # Create optimized prompt
          read -r -d '' PROMPT << EOM
          Analyze these GitHub changes and provide:
          1. **Purpose**: Concise main objective (1 sentence)
          2. **Key Changes**: 3-5 specific technical modifications
          3. **Impact**: Potential system effects
          4. **Review Focus**: Areas needing special attention

          Code Changes:
          $DIFF_CONTENT
          EOM

          # Call Mistral API with error handling
          RESPONSE=$(curl -f -s -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $MISTRAL_API_KEY" \
            -d @- https://api.mistral.ai/v1/chat/completions <<EOF
          {
            "model": "mistral-medium-latest",
            "messages": [
              {
                "role": "system",
                "content": "You are a senior engineer analyzing PRs. Respond with clean markdown using only the requested sections. Be technical and concise."
              },
              {
                "role": "user",
                "content": "$PROMPT"
              }
            ],
            "temperature": 0.3,
            "max_tokens": 800
          }
          EOF
          ) || { echo "API call failed"; exit 1; }

          # Process response with validation
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content? // empty')
          if [ -z "$SUMMARY" ]; then
            echo "::error::Empty API response"
            echo "$RESPONSE" | jq .
            exit 1
          fi

          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "### ü§ñ AI-Powered PR Analysis" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Determine affected areas
        id: code-owners
        run: |
          # Initialize output
          REVIEW_SECTIONS=""

          # Check backend changes
          if git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}" | grep -qE '^(src/backend|lib/)'; then
            REVIEW_SECTIONS="${REVIEW_SECTIONS}\n‚Ä¢ üß† **Backend**: @nectar-soft/backend-team"
          fi

          # Check frontend changes
          if git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}" | grep -qE '^(src/frontend|public/)'; then
            REVIEW_SECTIONS="${REVIEW_SECTIONS}\n‚Ä¢ üé® **Frontend**: @nectar-soft/frontend-team"
          fi

          # Check infrastructure changes
          if git diff --name-only "${{ github.event.pull_request.base.sha }}" "${{ github.event.pull_request.head.sha }}" | grep -qE '^(terraform|.github/workflows|docker/)'; then
            REVIEW_SECTIONS="${REVIEW_SECTIONS}\n‚Ä¢ üèó **Infrastructure**: @nectar-soft/devops-team"
          fi

          # Set output
          echo "review_areas<<EOF" >> $GITHUB_OUTPUT
          echo -e "$REVIEW_SECTIONS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post summary comment
        if: steps.diff-analysis.outputs.skip_summary == 'false'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.ai-summary.outputs.summary }}

            ### üîç Review Areas
            ${{ steps.code-owners.outputs.review_areas }}

            _AI analysis generated at $(date -u +'%Y-%m-%d %H:%M UTC') using Mistral_ shiheb

      - name: Post skip notice
        if: steps.diff-analysis.outputs.skip_summary == 'true'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### ü§ñ AI Summary Notice
            ${{ steps.diff-analysis.outputs.summary_status }}

            No automated analysis was performed for this PR. Please check the PR diff for any relevant changes.
